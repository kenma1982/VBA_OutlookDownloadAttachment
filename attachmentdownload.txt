Sub TextFileToArray(ByRef atext As Variant, ByVal sTextFile As String, ByRef addresslist As Variant, ByRef folderlist As Variant)
' Reads a text file into an array, one line per array element

    Dim FileNum As Integer
    Dim Buffer As String
    ReDim atext(1 To 1)

    FileNum = FreeFile()
    Open sTextFile For Input As FreeFile
    While Not EOF(FileNum)
        Line Input #FileNum, Buffer
        ' Ignore blank lines
        If Trim(Buffer) <> "" Then
            'Call AddAPhrase(aText, Buffer)
            atext(UBound(atext)) = Buffer
            ReDim Preserve atext(1 To UBound(atext) + 1)
        End If
    Wend
    Close #FileNum

    ' This leaves the array with one bogus empty record at end so
    ReDim Preserve atext(1 To UBound(atext) - 1) As String
    
        For x = LBound(atext) + 1 To UBound(atext)
        result = atext(x)
        result_arr = Split(result, ",")
        addresslist(x - 2) = Trim(result_arr(1))
        folderlist(x - 2) = Trim(result_arr(0))

    Next

End Sub

Sub loadsetting(ByRef aSetting As Variant, ByVal settingfile As String, ByRef FileType_list As Collection, ByRef Setting As Collection)

    Dim FileNum As Integer
    Dim arr_len As Integer
    Dim Buffer As String
    ReDim aSetting(1 To 1)
    Dim Parameter As String
    Dim ParameterValue As String
    Dim SavingPath As String
    Dim datestamp As Boolean
    Dim S1 As String
    Dim S2 As String

    FileNum = FreeFile()
    Open settingfile For Input As FreeFile
    While Not EOF(FileNum)
        Line Input #FileNum, Buffer
        ' Ignore blank lines
        If Trim(Buffer) <> "" Then
            'Call AddAPhrase(aText, Buffer)
            aSetting(UBound(aSetting)) = Buffer
            ReDim Preserve aSetting(1 To UBound(aSetting) + 1)
        End If
    Wend
    Close #FileNum

    ' This leaves the array with one bogus empty record at end so
    ReDim Preserve aSetting(1 To UBound(aSetting) - 1) As String
    For x = LBound(aSetting) To UBound(aSetting)
    result = aSetting(x)
    result_arr = Split(result, "=")
    arr_len = UBound(result_arr) - LBound(result_arr) + 1
    If arr_len = 2 Then
    
    Parameter = Trim(result_arr(0))
    ParameterValue = Trim(result_arr(1))
    ParameterValue = Mid(ParameterValue, 2, Len(ParameterValue) - 2)
    
    If Parameter = "SaveToFolder" Then
    SavingPath = ParameterValue
    Setting.Add SavingPath, "Path"
    
    End If
    
    If Parameter = "AddressFile" Then
    Setting.Add ParameterValue, "AddressFilePath"
    
    End If
    
    If Parameter = "datestamp" Then
        If ParameterValue = "YES" Then
        datestamp = True
        Else
        datestamp = False
        End If
        Setting.Add datestamp, "datestamp"
    End If
    
    End If
    
    If Parameter = "download_extension" Then
    tmparr = Split(ParameterValue, ",")
    For Each extension In tmparr
    FileType_list.Add (extension)
    Next extension
    
    End If
                
    Next

End Sub

Function get_file_extension(sFileName As String) As String
    'Variable declarations
    Dim sFileExtension As String
    Dim iLastDot As Double
    
    'Find the position of Dot '.' before extension name
    iLastDot = VBA.InStrRev(sFileName, ".")
    
    'Now Get only the file entension
    sFileExtension = VBA.Right(sFileName, VBA.Len(sFileName) - iLastDot)
    
    'Return File Extension
    get_file_extension = sFileExtension
End Function

Public Function IsInArray(stringToBeFound As String, arr As Variant) As Integer
    Dim i
    For i = LBound(arr) To UBound(arr)
        If arr(i) = stringToBeFound Then
            IsInArray = i + 1
            Exit Function
        End If
    Next i
    IsInArray = 0

End Function

Public Sub SaveAttachmentsToDisk(MItem As Outlook.MailItem)
Dim objAttachment As Attachment
Dim sSaveFolder As String
Dim address_flag As Integer
Dim FileType_list As New Collection
Dim Setting As New Collection
Dim FileType_flag As Boolean
Dim file_extension As String
Dim sTextFile As String
Dim atext() As String
Dim aSetting() As String
Dim addresslist(0 To 200) As String
Dim folderlist(0 To 200) As String
Dim strSenderAddress As String
Dim folder As String
Dim TimeStamp_flag As Boolean
Dim strDate As String
Dim datNow As Date

'Variable Setup
Call loadsetting(aSetting, "C:\mail\settings.txt", FileType_list, Setting) 'load setting file


sTextFile = Setting.Item("AddressFilePath")
sSaveFolder = Setting.Item("Path")
TimeStamp_flag = Setting.Item("datestamp")

Call TextFileToArray(atext, sTextFile, addresslist, folderlist) 'load addresslist file
datNow = Now()
strDate = Format(datNow, "yyyymmdd")

'Get sender adress
strSenderAddress = MItem.SenderEmailAddress

'check is in address list
address_flag = IsInArray(strSenderAddress, addresslist)

If address_flag > 0 Then     'email address in the list
    address_flag = address_flag - 1
    folder = folderlist(address_flag)
    FolderPath = sSaveFolder & folder & "\"
    
    If MItem.Attachments.Count > 0 Then 'email with attachment
            For Each objAttachment In MItem.Attachments
                file_extension = get_file_extension(objAttachment.FileName)
                For Each FileType In FileType_list
                    If LCase(file_extension) = LCase(FileType) Then
                    FileType_flag = True
                    End If
                Next
                If FileType_flag Then 'save file if the file type is correct
                    If Len(Dir(FolderPath, vbDirectory)) = 0 Then
                    MkDir FolderPath
                    End If
                    If TimeStamp_flag Then
                    'save with timestamp
                        objAttachment.SaveAsFile FolderPath & strDate & "_" & objAttachment.FileName
                    Else
                    'save without timestamp
                        objAttachment.SaveAsFile FolderPath & objAttachment.FileName
                    End If
                        
                End If
                FileType_flag = False
            Next


    End If
    
End If

End Sub

